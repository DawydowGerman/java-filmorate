CREATE TABLE IF NOT EXISTS USERS  (
	USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	EMAIL VARCHAR(20),
	LOGIN VARCHAR(50),
	NAME VARCHAR(50),
	BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS MPARATING  (
	MPARATING_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS FILMS  (
	FILM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(50),
	RELEASEDATE DATE,
	DURATION INTEGER,
	MPARATING_ID INTEGER,
	CONSTRAINT FILM_TO_MPARATING FOREIGN KEY (MPARATING_ID) REFERENCES MPARATING(MPARATING_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP  (
	FRIENDSHIP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	USER_ID INTEGER,
	FRIEND_ID INTEGER,
	CONSTRAINT FRIENDSHIP_TO_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
	CONSTRAINT FRIENDSHIP_TO_FRIENDS FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS LIKES  (
	LIKES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	USER_ID INTEGER,
	FILM_ID INTEGER,
	CONSTRAINT LIKES_TO_USER FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
	CONSTRAINT LIKES_TO_FILM FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID)
);

CREATE TABLE IF NOT EXISTS GENRES  (
	GENRES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES  (
	FILM_GENRES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILM_ID INTEGER,
	GENRES_ID INTEGER,
	CONSTRAINT FILM_GENRES_TO_FILM FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID),
	CONSTRAINT FILM_GENRES_TO_GENRES FOREIGN KEY (GENRES_ID) REFERENCES GENRES(GENRES_ID)
);